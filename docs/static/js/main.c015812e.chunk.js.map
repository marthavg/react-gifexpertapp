{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCUhBG,EAlBF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAENC,EAFM,iDAE2CC,UAAUH,GAFrD,+DAGOI,MAAMF,GAHb,cAGNG,EAHM,gBAISA,EAAKC,OAJd,uBAILC,EAJK,EAILA,KAEAC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV9B,kBAcLM,GAdK,4CAAH,sDC0BEO,EAvBM,SAAEf,GAAe,IAAD,EAEPd,mBAAS,CAC/BqB,KAAM,GACNS,SAAS,IAJoB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAoBjC,OAbAC,qBAAU,WAENpB,EAAQC,GACHoB,MAAK,SAAAC,GAEFH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGtB,CAAChB,IAGGiB,GCVIK,EAXK,SAAC,GAAkB,IAAjBV,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGzB,OACI,sBAAKqB,UAAU,yCAAf,UACI,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,kCAAKA,EAAL,WCwBGc,EA5BC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAAc,EAEMe,EAAcf,GAAlCa,EAFc,EAEpBN,KAAcS,EAFM,EAENA,QAItB,OACI,qCACI,oBAAIO,UAAW,oCAAf,SAAoDvB,IAClDgB,GAAW,mBAAGO,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAGQV,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCqBtBgB,EApCM,WAAM,MAGazC,mBAAU,CAAC,cAHxB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAavB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,aADA,CACC,EAAD,CAEIA,SAAUA,GADLA,Y,MCxBjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c015812e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=z860L2P6BQhUvLf0dyLssXZuDcnnb6dP`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const  gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n    // setImages(gifs);\r\n}\r\n\r\nexport default getGifs;","import { useEffect, useState } from \"react\"\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nconst useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        // getGifs();\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }); //.then( imgs => setImages( imgs ))\r\n    }, [category])\r\n\r\n   \r\n    return state; //{data:[], loading: true}\r\n}\r\n\r\nexport default useFetchGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n  \r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className= \"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => ( \r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            {...img} \r\n                        />\r\n                        //return <li key={id}> {title} </li>\r\n                    \r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState( ['One Punch'] );\r\n    \r\n    // const handleAdd = () => {\r\n        \r\n    //     // setCategories (['HunterXHunter', ...categories ]);\r\n    //     // setCategories ([...categories, 'HunterXHunter']);\r\n    //     setCategories(cats => [...cats, 'HurterXHunter']);\r\n\r\n    // }            \r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            \r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n                       \r\n            <ol>\r\n                {\r\n                    categories.map( category => ( \r\n                        // return <li key={category}> { category}</li>\r\n                        <GifGrid \r\n                            key={category}    \r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}